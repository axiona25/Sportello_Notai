# Generated by Django 5.2.7 on 2025-10-17 18:12

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_cliente_notaio_partner'),
        ('acts', '0001_initial'),
        ('appointments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appuntamento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('richiesto', 'Richiesto'), ('approvato', 'Approvato'), ('confermato', 'Confermato'), ('rifiutato', 'Rifiutato'), ('completato', 'Completato'), ('annullato', 'Annullato')], default='richiesto', max_length=20)),
                ('tipo', models.CharField(choices=[('consulenza', 'Consulenza'), ('firma_atto', 'Firma Atto'), ('sopralluogo', 'Sopralluogo'), ('incontro_preparatorio', 'Incontro Preparatorio'), ('altro', 'Altro')], default='consulenza', max_length=30)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('titolo', models.CharField(max_length=255)),
                ('descrizione', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('is_online', models.BooleanField(default=False)),
                ('meeting_url', models.TextField(blank=True)),
                ('note_notaio', models.TextField(blank=True, help_text='Note private del notaio')),
                ('note_pubbliche', models.TextField(blank=True, help_text='Note visibili a tutti i partecipanti')),
                ('reminder_sent', models.BooleanField(default=False)),
                ('reminder_sent_at', models.DateTimeField(blank=True, null=True)),
                ('invio_reminder_ore_prima', models.IntegerField(default=24, help_text="Ore prima dell'appuntamento per l'invio del reminder")),
                ('richiede_conferma', models.BooleanField(default=True, help_text='Se True, il notaio deve approvare la prenotazione')),
                ('confermato_at', models.DateTimeField(blank=True, null=True)),
                ('confermato_da', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_email', models.EmailField(blank=True, max_length=254)),
                ('act', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appuntamenti', to='acts.act')),
                ('notaio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appuntamenti_organizzati', to='accounts.notaio')),
            ],
            options={
                'verbose_name': 'Appuntamento',
                'verbose_name_plural': 'Appuntamenti',
                'db_table': 'appuntamenti',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='DisponibilitaNotaio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('giorno_settimana', models.CharField(choices=[('lunedi', 'Lunedì'), ('martedi', 'Martedì'), ('mercoledi', 'Mercoledì'), ('giovedi', 'Giovedì'), ('venerdi', 'Venerdì'), ('sabato', 'Sabato'), ('domenica', 'Domenica')], max_length=20)),
                ('ora_inizio', models.TimeField()),
                ('ora_fine', models.TimeField()),
                ('data_inizio_validita', models.DateField(help_text='Da quando è valida questa disponibilità')),
                ('data_fine_validita', models.DateField(blank=True, help_text='Fino a quando è valida (null = infinito)', null=True)),
                ('durata_slot_minuti', models.IntegerField(default=30, help_text='Durata di ogni slot prenotabile in minuti')),
                ('is_active', models.BooleanField(default=True)),
                ('permetti_prenotazioni_online', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notaio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disponibilita', to='accounts.notaio')),
            ],
            options={
                'verbose_name': 'Disponibilità Notaio',
                'verbose_name_plural': 'Disponibilità Notai',
                'db_table': 'disponibilita_notaio',
                'ordering': ['giorno_settimana', 'ora_inizio'],
            },
        ),
        migrations.CreateModel(
            name='EccezioneDisponibilita',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_inizio', models.DateTimeField()),
                ('data_fine', models.DateTimeField()),
                ('motivo', models.CharField(max_length=255)),
                ('descrizione', models.TextField(blank=True)),
                ('is_chiusura', models.BooleanField(default=True, help_text='True = non disponibile, False = disponibilità extra')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notaio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eccezioni_disponibilita', to='accounts.notaio')),
            ],
            options={
                'verbose_name': 'Eccezione Disponibilità',
                'verbose_name_plural': 'Eccezioni Disponibilità',
                'db_table': 'eccezioni_disponibilita',
                'ordering': ['data_inizio'],
            },
        ),
        migrations.CreateModel(
            name='PartecipanteAppuntamento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ruolo', models.CharField(choices=[('organizzatore', 'Organizzatore'), ('richiedente', 'Richiedente'), ('invitato', 'Invitato'), ('opzionale', 'Opzionale')], default='invitato', max_length=20)),
                ('status', models.CharField(choices=[('in_attesa', 'In Attesa'), ('accettato', 'Accettato'), ('rifiutato', 'Rifiutato'), ('forse', 'Forse')], default='in_attesa', max_length=20)),
                ('notificato', models.BooleanField(default=False)),
                ('notificato_at', models.DateTimeField(blank=True, null=True)),
                ('risposta_at', models.DateTimeField(blank=True, null=True)),
                ('note_partecipante', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appuntamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partecipanti', to='appointments.appuntamento')),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appuntamenti_partecipati', to='accounts.cliente')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appuntamenti_partecipati', to='accounts.partner')),
            ],
            options={
                'verbose_name': 'Partecipante Appuntamento',
                'verbose_name_plural': 'Partecipanti Appuntamenti',
                'db_table': 'partecipanti_appuntamento',
                'ordering': ['created_at'],
            },
        ),
        migrations.DeleteModel(
            name='Appointment',
        ),
        migrations.AddIndex(
            model_name='appuntamento',
            index=models.Index(fields=['notaio', 'start_time'], name='appuntament_notaio__cb3681_idx'),
        ),
        migrations.AddIndex(
            model_name='appuntamento',
            index=models.Index(fields=['status', 'start_time'], name='appuntament_status_db8851_idx'),
        ),
        migrations.AddIndex(
            model_name='appuntamento',
            index=models.Index(fields=['start_time', 'end_time'], name='appuntament_start_t_e7cbd7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='disponibilitanotaio',
            unique_together={('notaio', 'giorno_settimana', 'ora_inizio', 'data_inizio_validita')},
        ),
        migrations.AlterUniqueTogether(
            name='partecipanteappuntamento',
            unique_together={('appuntamento', 'cliente'), ('appuntamento', 'partner')},
        ),
    ]
