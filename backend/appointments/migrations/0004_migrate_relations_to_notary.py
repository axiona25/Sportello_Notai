# Generated by Django on 2025-10-20

from django.db import migrations


def migrate_disponibilita_and_appuntamenti_to_notary(apps, schema_editor):
    """
    Copia le relazioni da notaio ‚Üí notary in:
    - DisponibilitaNotaio
    - Appuntamento
    """
    DisponibilitaNotaio = apps.get_model('appointments', 'DisponibilitaNotaio')
    Appuntamento = apps.get_model('appointments', 'Appuntamento')
    Notary = apps.get_model('notaries', 'Notary')
    
    # Migra DisponibilitaNotaio
    disponibilita_migrated = 0
    for disp in DisponibilitaNotaio.objects.all():
        if disp.notaio and not disp.notary:
            try:
                # Trova il Notary corrispondente tramite lo user
                notary = Notary.objects.filter(user=disp.notaio.user).first()
                if notary:
                    disp.notary = notary
                    disp.save()
                    disponibilita_migrated += 1
                    print(f'‚úÖ Disponibilit√† migrata per {notary.studio_name}')
                else:
                    print(f'‚ö†Ô∏è  Notary non trovato per disponibilit√† {disp.id}')
            except Exception as e:
                print(f'‚ùå Errore migrando disponibilit√† {disp.id}: {e}')
    
    # Migra Appuntamento
    appuntamenti_migrated = 0
    for app in Appuntamento.objects.all():
        if app.notaio and not app.notary:
            try:
                # Trova il Notary corrispondente tramite lo user
                notary = Notary.objects.filter(user=app.notaio.user).first()
                if notary:
                    app.notary = notary
                    app.save()
                    appuntamenti_migrated += 1
                    print(f'‚úÖ Appuntamento migrato per {notary.studio_name}')
                else:
                    print(f'‚ö†Ô∏è  Notary non trovato per appuntamento {app.id}')
            except Exception as e:
                print(f'‚ùå Errore migrando appuntamento {app.id}: {e}')
    
    print(f'\nüìä Migrazione relazioni completata:')
    print(f'   ‚úÖ Disponibilit√† migrate: {disponibilita_migrated}')
    print(f'   ‚úÖ Appuntamenti migrati: {appuntamenti_migrated}')


def reverse_migration(apps, schema_editor):
    """
    Reverse: non fa nulla, le relazioni vecchie sono ancora presenti.
    """
    print('‚è™ Reverse migration: relazioni originali preservate')
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('appointments', '0003_appuntamento_notary_disponibilitanotaio_notary_and_more'),
        ('notaries', '0007_migrate_notaio_to_notary_data'),
    ]

    operations = [
        migrations.RunPython(migrate_disponibilita_and_appuntamenti_to_notary, reverse_migration),
    ]
