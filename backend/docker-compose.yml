version: '3.8'

services:
  # PostgreSQL Database with PostGIS
  db:
    image: postgis/postgis:15-3.4
    container_name: sportello-notai-db
    environment:
      POSTGRES_DB: sportello_notai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: sportello-notai-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend
  web:
    build: .
    container_name: sportello-notai-backend
    command: >
      sh -c "python manage.py migrate &&
             gunicorn core.wsgi:application 
             --bind 0.0.0.0:8001 
             --workers 4 
             --worker-class gevent
             --worker-connections 1000
             --timeout 30
             --access-logfile -
             --error-logfile -"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8001:8001"
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-this}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=sportello_notai
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,web
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery_worker:
    build: .
    container_name: sportello-notai-celery
    command: celery -A core worker -l info --concurrency=4
    volumes:
      - .:/app
    environment:
      - DEBUG=False
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=sportello_notai
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery_beat:
    build: .
    container_name: sportello-notai-celery-beat
    command: celery -A core beat -l info
    volumes:
      - .:/app
    environment:
      - DEBUG=False
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=sportello_notai
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # LibreOffice Collabora Online (Document Server)
  collabora:
    image: collabora/code:latest
    container_name: sportello-notai-collabora
    ports:
      - "9980:9980"
    environment:
      - domain=host\\.docker\\.internal|localhost|127\\.0\\.0\\.1  # Permetti tutti gli host locali
      - username=admin
      - password=${COLLABORA_PASSWORD:-collabora_admin_pass}
      - extra_params=--o:ssl.enable=false --o:ssl.termination=false --o:storage.wopi.host[0]=host.docker.internal:8000 --o:storage.wopi.host[1]=localhost:8000 --o:storage.wopi.host[2]=127.0.0.1:8000
      - DONT_GEN_SSL_CERT=1  # Disabilita certificati SSL interni
      - aliasgroups=  # Permetti tutti gli alias
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Permetti al container di raggiungere l'host
    restart: unless-stopped
    cap_add:
      - MKNOD  # Necessario per Collabora
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9980/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: sportello-notai-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/static:ro
      - media_volume:/media:ro
    ports:
      - "80:80"
    depends_on:
      - web
      - collabora
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  default:
    name: sportello-notai-network

